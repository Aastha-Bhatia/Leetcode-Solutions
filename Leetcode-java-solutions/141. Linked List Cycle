/**
 * Definition for singly-linked list.
 * class ListNode{
 *     int val;
 *     ListNode next;
 *     ListNode(int x){
 *         val=x;
 *         next=null;
 *     }
 * }
 */
//  without using extra space(hashset)- using slow and fast pointers...
public class Solution{
    public boolean hasCycle(ListNode head){
        ListNode slow=head;
        ListNode fast=head;
        while(slow!=null && fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            if(slow==fast){
                return true;
            }
        }
        return false;
    }
}