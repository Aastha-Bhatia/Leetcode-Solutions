/*** Definition for singly-linked list.
 * class ListNode{
 *     int val;
 *     ListNode next;
 *     ListNode(int x){
 *         val = x;
 *         next = null;
 *     }
 * }*/
 // without using extra space...
public class Solution{
    public ListNode detectCycle(ListNode head){
        ListNode slow=head;
        ListNode fast=head;
        boolean cycle=false;
        while(slow!=null && fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            // cycle exists..
            if(slow==fast){
                cycle=true;
                break;
            }
        }
        if(!cycle){
            return null;
        }
        // but if cycle exists...
        while(head!=slow){
            slow=slow.next;
            head=head.next;
        }
        return head;
    }
}