class Solution{
    public void findpermute(int nums[], List<List<Integer>> a, List<Integer> list){
        if(nums.length==0){
            a.add(new ArrayList<>(list));
            return;
        }
        for(int i=0;i<nums.length;i++){
            int current=nums[i];
            int newarray[]=new int[nums.length-1];
            int index=0;
            for(int j=0;j<nums.length;j++){
                if(j!=i){
                    newarray[index]=nums[j];
                    index++;
                }
            }
            // new array excluding value of current has been created
            List<Integer> newList=new ArrayList<>(list);
            newList.add(current);
            findpermute(newarray, a, newList);
        }

    }
    public List<List<Integer>> permute(int[] nums){
        List<List<Integer>> a=new ArrayList<>();
        findpermute(nums, a, new ArrayList<>());
        return a;
    }
}