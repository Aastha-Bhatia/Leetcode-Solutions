class Solution{
    public static void findpermutations(List<List<Integer>>mainlist,List<Integer>seclist,int[]nums,boolean frequency[]){
        if(seclist.size()==nums.length){
            mainlist.add(new ArrayList<>(seclist));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(!frequency[i]){
                frequency[i]=true;
                seclist.add(nums[i]);
                findpermutations(mainlist,seclist,nums,frequency);
                seclist.remove(seclist.size()-1);
                frequency[i]=false;
            }
        }
    }
    public List<List<Integer>> permute(int[] nums){
        List<List<Integer>> mainlist=new ArrayList<>();
        List<Integer> seclist=new ArrayList<>();
        boolean frequency[]=new boolean[nums.length];
        findpermutations(mainlist,seclist,nums,frequency);
        return mainlist;
    }
}