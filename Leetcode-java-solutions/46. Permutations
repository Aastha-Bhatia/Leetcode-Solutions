class Solution{
    List<List<Integer>> ans;
    public List<List<Integer>> permute(int[] nums){
        ans=new ArrayList<>();
        solve(nums,new Stack<>(),new boolean[nums.length]);
        return ans;
    }
    public void solve(int nums[],Stack<Integer>st,boolean vis[]){
        if(st.size()==nums.length){
            ans.add(new ArrayList<>(st));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(!vis[i]){
                st.push(nums[i]);
                vis[i]=true;
                solve(nums,st,vis);
                // backtrack...
                st.pop();
                vis[i]=false;
            }
        }
    }
}