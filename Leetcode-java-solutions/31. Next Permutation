class Solution{
    public void nextPermutation(int[] nums){
        // finding breakpoint..
        int breakpoint=-1;
        int n=nums.length-1;
        for(int i=n-1;i>=0;i--){
            if(nums[i]<nums[i+1]){
                breakpoint=i;
                break;
            }
        }
        if(breakpoint==-1){
            reverse(nums,0,n);
            return;
        }
        else{
            int slightlylarger=-1;
            for(int i=n;i>breakpoint;i--){
                if(nums[i]>nums[breakpoint]){
                    if(slightlylarger==-1 || nums[i]<slightlylarger){
                        // swap
                        int temp=nums[i];
                        nums[i]=nums[breakpoint];
                        nums[breakpoint]=temp;
                        slightlylarger=nums[i];
                    }
                }
            }
            // reversing after breakpoint
            reverse(nums,breakpoint+1,n);
            return;
        }
    }
    public void reverse(int nums[],int start,int end){
        while(start<end){
            int temp=nums[start];
            nums[start]=nums[end];
            nums[end]=temp;
            start++;
            end--;
        }
    }
}