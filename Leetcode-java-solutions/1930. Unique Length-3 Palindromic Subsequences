class Solution{
    public int countPalindromicSubsequence(String s){
        Set<String> set=new HashSet<>();
        for(char c='a';c<='z';c++){
            int i=0; 
            int k=s.length()-1;
            while(i<s.length() && s.charAt(i)!=c){
                i++;
            }
            while(k>=0 && s.charAt(k)!=c){
                k--;
            }
            //  we will get i and k after this loop, where i and k will be same and anything between them can be palindrome
            int count=0;
            // we need only single char between both the strings...
            for(int j=i+1;j<k;j++){
                String ans=""+s.charAt(i)+s.charAt(j)+s.charAt(k);
                set.add(ans);
                count++;
            }
        }
    return set.size();   
    }
}